apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: test-build-deploy
spec:
  workspaces:
    - name: shared-workspace
  params:
    - name: deployment-name
      type: string
      description: name of the deployment to be patched
    - name: git-url
      type: string
      description: url of the git repo for the code of deployment
    - name: git-revision
      type: string
      description: branch to be used from repo of the code for deployment
      default: 'main'
    - name: IMAGE
      type: string
      description: image to be built from the code
  tasks:
    # 1. Fetch the repository
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.git-revision)

    # 2. Test the application
    - name: test-app
      taskRef:
        name: test-app
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - fetch-repository

    # 3. Build the image
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: $(params.IMAGE)
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - test-app

    # 4. Apply app manifests
    - name: apply-manifests
      taskRef:
        name: apply-manifests
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - build-image

    # 5. Update app deployment
    - name: update-deployment
      taskRef:
        name: update-deployment
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: deployment
          value: $(params.deployment-name)
        - name: IMAGE
          value: $(params.IMAGE)
      runAfter:
        - apply-manifests
